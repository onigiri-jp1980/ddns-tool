# .github/workflows/deploy-to-aws.yml
name: Deploy to AWS

on:
  push:
    branches:
      - develop
  workflow_dispatch: # 手動実行もOKにする

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{vars.IMAGE_REPOSITORY}}
  IMAGE_REPOSITORY: ${{vars.IMAGE_REPOSITORY}}
  IMAGE_TAG: ${{ vars.IMAGE_TAG }}
  DOCKER_COMPOSE_FILE: ${{vars.DOCKER_COMPOSE_FILE}}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker images
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} build

      - name: Push Docker images
        run: |
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} push

      - name: Update Docker image using Lambda
        uses: int128/deploy-lambda-action@v1
        with:
            function-name: ${{ vars.LAMBDA_FUNCTION_NAME }}
            image-uri: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}      
      # - name: Update Lambda function to use new image
      #   run: |
      #     IMAGE_URI=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      #     aws lambda update-function-code \
      #       --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} \
      #       --image-uri $IMAGE_URI
